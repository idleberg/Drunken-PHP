{
        "scope": "source.php",
        "completions":
        [
                { "trigger": "add_cslashes", "contents": "addcslashes(${1:\\$str}, ${2:\\$charlist});" },
                { "trigger": "add_slashes", "contents": "addslashes(${1:\\$str});" },
                { "trigger": "base_name", "contents": "basename(${1:\\$path}${2:, ${3:\\$suffix}} );" },
                { "trigger": "base64decode", "contents": "base64_decode(${1:data}${2:, ${3:strict}});" },
                { "trigger": "base64decode:strict", "contents": "base64_decode(${1:data}, true);" },
                { "trigger": "base64encode", "contents": "base64_encode(${1:data});" },
                { "trigger": "convertuudecode", "contents": "convert_uudecode(${1:data});" },
                { "trigger": "convertuuencode", "contents": "convert_uuencode(${1:data});" },
                { "trigger": "gz_decode", "contents": "gzdecode(${1:data}${2:, ${3:\\$length}});" },
                { "trigger": "gz_encode", "contents": "gzencode(${1:data}${2:, ${3:\\$level}}${4:, ${5:\\$encoding_mode}});" },
                { "trigger": "gz_encode:FORCE_GZIP", "contents": "gzencode(${1:data}${2:, ${3:\\$level}}, FORCE_GZIP);" },
                { "trigger": "gz_encode:FORCE_DEFLATE", "contents": "gzencode(${1:data}${2:, ${3:\\$level}}, FORCE_DEFLATE);" },
                { "trigger": "jsondecode", "contents": "json_decode(${1:\\$json}${2:, ${3:\\$assoc}}${4:, ${5:\\$depth}}${6:, ${7:\\$options}});" },
                { "trigger": "jsondecode:JSON_BIGINT_AS_STRING", "contents": "json_decode(${1:\\$json}${2:, ${3:\\$assoc}}${4:, ${5:\\$depth}}, JSON_BIGINT_AS_STRING);" },
                { "trigger": "jsonencode", "contents": "json_encode(${1:\\$value}${2:, ${3:\\$options}}${4:, ${5:\\$depth}});" },
                { "trigger": "jsonencode:JSON_HEX_QUOT", "contents": "json_encode(${1:\\$value}, JSON_HEX_QUOT${2:, ${3:\\$depth}});" },
                { "trigger": "jsonencode:JSON_HEX_TAG", "contents": "json_encode(${1:\\$value}, JSON_HEX_TAG${2:, ${3:\\$depth}});" },
                { "trigger": "jsonencode:JSON_HEX_AMP", "contents": "json_encode(${1:\\$value}, JSON_HEX_AMP${2:, ${3:\\$depth}});" },
                { "trigger": "jsonencode:JSON_HEX_APOS", "contents": "json_encode(${1:\\$value}, JSON_HEX_APOS${2:, ${3:\\$depth}});" },
                { "trigger": "jsonencode:JSON_NUMERIC_CHECK", "contents": "json_encode(${1:\\$value}, JSON_NUMERIC_CHECK${2:, ${3:\\$depth}});" },
                { "trigger": "jsonencode:JSON_PRETTY_PRINT", "contents": "json_encode(${1:\\$value}, JSON_PRETTY_PRINT${2:, ${3:\\$depth}});" },
                { "trigger": "jsonencode:JSON_UNESCAPED_SLASHES", "contents": "json_encode(${1:\\$value}, JSON_UNESCAPED_SLASHES${2:, ${3:\\$depth}});" },
                { "trigger": "jsonencode:JSON_FORCE_OBJECT", "contents": "json_encode(${1:\\$value}, JSON_FORCE_OBJECT${2:, ${3:\\$depth}});" },
                { "trigger": "jsonencode:JSON_UNESCAPED_UNICODE", "contents": "json_encode(${1:\\$value}, JSON_UNESCAPED_UNICODE${2:, ${3:\\$depth}});" },
                { "trigger": "raw_url_decode", "contents": "rawurldecode(${1:\\$str});" },
                { "trigger": "raw_url_encode", "contents": "rawurlencode(${1:\\$str});" },
                { "trigger": "url_decode", "contents": "urldecode(${1:\\$str});" },
                { "trigger": "url_encode", "contents": "urlencode(${1:\\$str});" },
                { "trigger": "sessiondecode", "contents": "session_decode(${1:data});" },
                { "trigger": "utf8decode", "contents": "utf8_decode(${1:data});" },
                { "trigger": "utf8encode", "contents": "utf8_encode(${1:data});" },
                { "trigger": "sessionencode", "contents": "session_encode(${1:void});" },
                { "trigger": "zlibencode", "contents": "zlib_encode(${1:data}${2:, ${3:\\$encoding}}${4:, ${5:\\$level}});" },
                { "trigger": "zlibdecode", "contents": "zlib_decode(${1:data}${2:, ${3:\\$max_decoded_len}});" },
                { "trigger": "bc_add", "contents": "bcadd(${1:\\$left_operand}, ${2:\\$right_operand}${3:, ${4:scale}});" },
                { "trigger": "bc_comp", "contents": "bccomp(${1:\\$left_operand}, ${2:\\$right_operand}${3:, ${4:scale}});" },
                { "trigger": "bc_div", "contents": "bcdiv(${1:\\$left_operand}, ${2:\\$right_operand}${3:, ${4:scale}});" },
                { "trigger": "bc_mod", "contents": "bcmod(${1:\\$left_operand}, ${2:modulus});" },
                { "trigger": "bc_mul", "contents": "bcmul(${1:\\$left_operand}, ${2:\\$right_operand}${3:, ${4:scale}});" },
                { "trigger": "bc_pow", "contents": "bcpow(${1:\\$left_operand}, ${2:\\$right_operand}${3:, ${4:scale}});" },
                { "trigger": "bc_powmod", "contents": "bcpowmod(${1:\\$left_operand}, ${2:\\$right_operand}, ${3:modulus}${4:, ${5:scale}});" },
                { "trigger": "bc_scale", "contents": "bcscale(${1:\\$scale});" },
                { "trigger": "bc_sqrt", "contents": "bcsqrt(${1:\\$operand}${2:, ${3:scale}});" },
                { "trigger": "bc_sub", "contents": "bcsub(${1:\\$left_operand}, ${2:\\$right_operand}${3:, ${4:scale}});" },
                { "trigger": "bz_close", "contents": "bzclose(${1:\\$bz});" },
                { "trigger": "bz_compress", "contents": "bzcompress(${1:\\$source}${2:, ${3:\\$blocksize}${4:, ${5:\\$workfactor}}});" },
                { "trigger": "bz_compress:1", "contents": "bzcompress(${1:\\$source}, 1${4:, ${5:\\$workfactor}});" },
                { "trigger": "bz_compress:2", "contents": "bzcompress(${1:\\$source}, 2${4:, ${5:\\$workfactor}});" },
                { "trigger": "bz_compress:3", "contents": "bzcompress(${1:\\$source}, 3${4:, ${5:\\$workfactor}});" },
                { "trigger": "bz_compress:4", "contents": "bzcompress(${1:\\$source}, 4${4:, ${5:\\$workfactor}});" },
                { "trigger": "bz_compress:5", "contents": "bzcompress(${1:\\$source}, 5${4:, ${5:\\$workfactor}});" },
                { "trigger": "bz_compress:6", "contents": "bzcompress(${1:\\$source}, 6${4:, ${5:\\$workfactor}});" },
                { "trigger": "bz_compress:7", "contents": "bzcompress(${1:\\$source}, 7${4:, ${5:\\$workfactor}});" },
                { "trigger": "bz_compress:8", "contents": "bzcompress(${1:\\$source}, 8${4:, ${5:\\$workfactor}});" },
                { "trigger": "bz_compress:9", "contents": "bzcompress(${1:\\$source}, 9${4:, ${5:\\$workfactor}});" },
                { "trigger": "bz_decompress", "contents": "bzdecompress(${1:\\$source}${2:, ${3:small}});" },
                { "trigger": "bz_decompress:small", "contents": "bzdecompress(${1:\\$source}, true);" },
                { "trigger": "bz_errno", "contents": "bzerrno(${1:\\$bz});" },
                { "trigger": "bz_error", "contents": "bzerror(${1:\\$bz});" },
                { "trigger": "bz_errstr", "contents": "bzerrstr(${1:\\$bz});" },
                { "trigger": "bz_flush", "contents": "bzflush(${1:\\$bz});" },
                { "trigger": "bz_open", "contents": "bzopen(${1:\\$filename}, ${2:\\$mode});" },
                { "trigger": "bz_read", "contents": "bzread(${1:\\$bz}${2:, ${3:\\$length}});" },
                { "trigger": "bz_write", "contents": "bzwrite(${1:\\$bz}, ${2:\\$data}${3:, ${4:\\$length}});" },
                { "trigger": "calinfo", "contents": "cal_info(${1:\\$calendar});" },
                { "trigger": "calinfo:CAL_GREGORIAN", "contents": "cal_info(CAL_GREGORIAN);" },
                { "trigger": "calinfo:CAL_JEWISH", "contents": "cal_info(CAL_JEWISH);" },
                { "trigger": "calinfo:CAL_JULIAN", "contents": "cal_info(CAL_JULIAN);" },
                { "trigger": "calinfo:CAL_FRENCH", "contents": "cal_info(CAL_FRENCH);" },
                { "trigger": "check_date", "contents": "checkdate(${1:\\$day}, ${2:\\$month}, ${3:\\$year});" },
                { "trigger": "check_dnsrr", "contents": "checkdnsrr(${1:\\$host}${2:, ${3:\\$type}});" },
                { "trigger": "check_dnsrr:A", "contents": "checkdnsrr(${1:\\$host}, A);" },
                { "trigger": "check_dnsrr:MX", "contents": "checkdnsrr(${1:\\$host}, MX);" },
                { "trigger": "check_dnsrr:NS", "contents": "checkdnsrr(${1:\\$host}, NS);" },
                { "trigger": "check_dnsrr:SOA", "contents": "checkdnsrr(${1:\\$host}, SOA);" },
                { "trigger": "check_dnsrr:PTR", "contents": "checkdnsrr(${1:\\$host}, PTR);" },
                { "trigger": "check_dnsrr:CNAME", "contents": "checkdnsrr(${1:\\$host}, CNAME);" },
                { "trigger": "check_dnsrr:AAAA", "contents": "checkdnsrr(${1:\\$host}, AAAA);" },
                { "trigger": "check_dnsrr:A6", "contents": "checkdnsrr(${1:\\$host}, A6);" },
                { "trigger": "check_dnsrr:SRV", "contents": "checkdnsrr(${1:\\$host}, SRV);" },
                { "trigger": "check_dnsrr:NAPTR", "contents": "checkdnsrr(${1:\\$host}, NAPTR);" },
                { "trigger": "check_dnsrr:TXT", "contents": "checkdnsrr(${1:\\$host}, TXT);" },
                { "trigger": "check_dnsrr:ANY", "contents": "checkdnsrr(${1:\\$host}, ANY);" },
                { "trigger": "chunksplit", "contents": "chunk_split(${1:\\$body}${2:, ${3:\\$chunklen}${4:, ${5:\\$end}}});" },
                { "trigger": "classalias", "contents": "class_alias(${1:\\$original}, ${2:\\$alias}${3:, ${4:\\$autoload}});" },
                { "trigger": "classalias:true", "contents": "class_alias(${1:\\$original}, ${2:\\$alias}, true);" },
                { "trigger": "classalias:false", "contents": "class_alias(${1:\\$original}, ${2:\\$alias}, false);" },
                { "trigger": "classexists", "contents": "class_exists(${1:\\$class_name}${2:, ${3:\\$autoload}});" },
                { "trigger": "classexists:true", "contents": "class_exists(${1:\\$class_name}, true);" },
                { "trigger": "classexists:false", "contents": "class_exists(${1:\\$class_name}, false);" },
                { "trigger": "classparents", "contents": "class_parents(${1:\\$class}${2:, ${3:\\$autoload}});" },
                { "trigger": "classparents:true", "contents": "class_parents(${1:\\$class}, true);" },
                { "trigger": "classparents:false", "contents": "class_parents(${1:\\$class}, false);" },
                { "trigger": "classimplements", "contents": "class_implements(${1:\\$class}${2:, ${3:\\$autoload}});" },
                { "trigger": "classimplements:true", "contents": "class_implements(${1:\\$class}, true);" },
                { "trigger": "classimplements:false", "contents": "class_implements(${1:\\$class}, false);" },
                { "trigger": "classuses", "contents": "class_uses(${1:\\$class}${2:, ${3:\\$autoload}});" },
                { "trigger": "classuses:true", "contents": "class_uses(${1:\\$class}, true);" },
                { "trigger": "classuses:false", "contents": "class_uses(${1:\\$class}, false);" },
                { "trigger": "close_dir", "contents": "closedir(${1:\\$dir_handle});" },
                { "trigger": "close_log", "contents": "closelog(${1});" },
                { "trigger": "connectionaborted", "contents": "connection_aborted(${1});" },
                { "trigger": "connectionstatus", "contents": "connection_status(${1});" },
                { "trigger": "countchars", "contents": "count_chars(${1:\\$string}${2:, ${3:\\$mode}});" },
                { "trigger": "countchars:0", "contents": "count_chars(${1:\\$string}, 0);" },
                { "trigger": "countchars:1", "contents": "count_chars(${1:\\$string}, 1);" },
                { "trigger": "countchars:2", "contents": "count_chars(${1:\\$string}, 2);" },
                { "trigger": "countchars:3", "contents": "count_chars(${1:\\$string}, 3);" },
                { "trigger": "countchars:4", "contents": "count_chars(${1:\\$string}, 4);" },
                { "trigger": "createfunction", "contents": "create_function(${1:\\$args}, ${2:\\$code});" },
                { "trigger": "dateadd", "contents": "date_add(${1:\\$time}${2:, ${3:\\$interval}});" },
                { "trigger": "datecreate", "contents": "date_create(${1:\\$time}${2:, ${3:\\$timezone}});" },

                { "note": "It ain't over 'til the fat lady sings" }
        ]
}