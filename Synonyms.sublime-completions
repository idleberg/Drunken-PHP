{
        "scope": "source.php",
        "completions":
        [
                { "trigger": "%arc_sin", "contents": "asin(${1:float});" },
                { "trigger": "%arc_sinh", "contents": "asinh(${1:float});" },
                { "trigger": "%arc_tan", "contents": "atan(${1:float});" },
                { "trigger": "%arc_tan2", "contents": "atan2(${1:x},${2:y});" },
                { "trigger": "%arc_tanh", "contents": "atanh(${1:float});" },
                { "trigger": "%arcsin", "contents": "asin(${1:float});" },
                { "trigger": "%arcsinh", "contents": "asinh(${1:float});" },
                { "trigger": "%arctan", "contents": "atan(${1:float});" },
                { "trigger": "%arctan2", "contents": "atan2(${1:x},${2:y});" },
                { "trigger": "%arctanh", "contents": "atanh(${1:float});" },
                { "trigger": "%array_count", "contents": "count(${1:array_or_countable}${2:, ${3:${4:mode}}});" },
                { "trigger": "%array_count:COUNT_RECURSIVE", "contents": "count(${1:array_or_countable}, COUNT_RECURSIVE);" },
                { "trigger": "%array_current", "contents": "current(${1:array});" },
                { "trigger": "%array_reverse_sort", "contents": "arsort(${1:array}${2:, ${3:sort_flags}});" },
                { "trigger": "%array_sort", "contents": "asort(${1:array}${2:, ${3:sort_flags}});" },
                { "trigger": "%array_sort:SORT_FLAG_CASE", "contents": "asort(${1:array}, SORT_FLAG_CASE);" },
                { "trigger": "%array_sort:SORT_LOCALE_STRING", "contents": "asort(${1:array}, SORT_LOCALE_STRING);" },
                { "trigger": "%array_sort:SORT_NATURAL", "contents": "asort(${1:array}, SORT_NATURAL);" },
                { "trigger": "%array_sort:SORT_NUMERIC", "contents": "asort(${1:array}, SORT_NUMERIC);" },
                { "trigger": "%array_sort:SORT_REGULAR", "contents": "asort(${1:array}, SORT_REGULAR);" },
                { "trigger": "%array_sort:SORT_STRING", "contents": "asort(${1:array}, SORT_STRING);" },
                { "trigger": "%array_sort_reverse", "contents": "arsort(${1:array}${3:, ${4:sort_flags}});" },
                { "trigger": "%array_sort_reverse:SORT_FLAG_CASE", "contents": "arsort(${1:array}, SORT_FLAG_CASE);" },
                { "trigger": "%array_sort_reverse:SORT_LOCALE_STRING", "contents": "arsort(${1:array}, SORT_LOCALE_STRING);" },
                { "trigger": "%array_sort_reverse:SORT_NATURAL", "contents": "arsort(${1:array}, SORT_NATURAL);" },
                { "trigger": "%array_sort_reverse:SORT_NUMERIC", "contents": "arsort(${1:array}, SORT_NUMERIC);" },
                { "trigger": "%array_sort_reverse:SORT_REGULAR", "contents": "arsort(${1:array}, SORT_REGULAR);" },
                { "trigger": "%array_sort_reverse:SORT_STRING", "contents": "arsort(${1:array}, SORT_STRING);" },
                { "trigger": "%bzip_close", "contents": "bzclose(${1:bz});" },
                { "trigger": "%bzip_compress", "contents": "bzcompress(${1:source}${2:, ${3:blocksize}${4:, ${5:workfactor}}});" },
                { "trigger": "%bzip_compress:1", "contents": "bzcompress(${1:source}, 1${2:, ${3:workfactor}}});" },
                { "trigger": "%bzip_compress:2", "contents": "bzcompress(${1:source}, 2${2:, ${3:workfactor}}});" },
                { "trigger": "%bzip_compress:3", "contents": "bzcompress(${1:source}, 3${2:, ${3:workfactor}}});" },
                { "trigger": "%bzip_compress:4", "contents": "bzcompress(${1:source}, 4${2:, ${3:workfactor}}});" },
                { "trigger": "%bzip_compress:5", "contents": "bzcompress(${1:source}, 5${2:, ${3:workfactor}}});" },
                { "trigger": "%bzip_compress:6", "contents": "bzcompress(${1:source}, 6${2:, ${3:workfactor}}});" },
                { "trigger": "%bzip_compress:7", "contents": "bzcompress(${1:source}, 7${2:, ${3:workfactor}}});" },
                { "trigger": "%bzip_compress:8", "contents": "bzcompress(${1:source}, 8${2:, ${3:workfactor}}});" },
                { "trigger": "%bzip_compress:9", "contents": "bzcompress(${1:source}, 9${2:, ${3:workfactor}}});" },
                { "trigger": "%bzip_decompress", "contents": "bzdecompress(${1:source}${2:, ${3:small}});" },
                { "trigger": "%bzip_decompress:small", "contents": "bzdecompress(${1:source}, true);" },
                { "trigger": "%bzip_error", "contents": "bzerror(${1:bz});" },
                { "trigger": "%bzip_error_number", "contents": "bzerrno(${1:bz});" },
                { "trigger": "%bzip_error_str", "contents": "bzerrstr(${1:bz});" },
                { "trigger": "%bzip_flush", "contents": "bzflush(${1:bz});" },
                { "trigger": "%bzip_open", "contents": "bzopen(${1:filename}, ${2:mode});" },
                { "trigger": "%bzip_read", "contents": "bzread(${1:bz}${2:, ${3:length}});" },
                { "trigger": "%bzip_write", "contents": "bzwrite(${1:bz}, ${2:data}${3:, ${4:${5:length}}});" },
                { "trigger": "%change_dir", "contents": "chdir('${1:directory}');" },
                { "trigger": "%change_group", "contents": "chgrp(${1:filename}, ${2:group});" },
                { "trigger": "%change_mode", "contents": "chmod(${1:filename}, ${2:mode});" },
                { "trigger": "%change_owner", "contents": "chown(${1:filename}, ${2:user});" },
                { "trigger": "%character_return", "contents": "chr('${1:ascii}');" },
                { "trigger": "%check_type_alnum", "contents": "ctype_alnum(${1:text});" },
                { "trigger": "%check_type_alpha", "contents": "ctype_alpha(${1:text});" },
                { "trigger": "%check_type_cntrl", "contents": "ctype_cntrl(${1:text});" },
                { "trigger": "%check_type_digit", "contents": "ctype_digit(${1:text});" },
                { "trigger": "%check_type_graph", "contents": "ctype_graph(${1:text});" },
                { "trigger": "%check_type_lower", "contents": "ctype_lower(${1:text});" },
                { "trigger": "%check_type_print", "contents": "ctype_print(${1:text});" },
                { "trigger": "%check_type_punct", "contents": "ctype_punct(${1:text});" },
                { "trigger": "%check_type_space", "contents": "ctype_space(${1:text});" },
                { "trigger": "%check_type_upper", "contents": "ctype_upper(${1:text});" },
                { "trigger": "%check_type_xdigit", "contents": "ctype_xdigit(${1:text});" },
                { "trigger": "%crc32_encode", "contents": "crc32(${1:string});" },
                { "trigger": "%encode_crc32", "contents": "crc32(${1:string});" },
                { "trigger": "%file_copy", "contents": "copy(${1:source}, ${2:dest}${3:, ${4:context}});" },
                { "trigger": "%filecopy", "contents": "copy(${1:source}, ${2:dest}${3:, ${4:context}});" },
                { "trigger": "%get_mhash_name", "contents": "mhash_get_hash_name(${1:hash});" },
                { "trigger": "%gzip_decode", "contents": "gzdecode(${1:data}${2:, ${3:length}});" },
                { "trigger": "%gzip_encode", "contents": "gzencode(${1:data}${2:, ${3:level}${4:, ${5:encoding_mode}}});" },
                { "trigger": "%gzip_encode:FORCE_DEFLATE", "contents": "gzencode(${1:data}${2:, ${3:level}}, FORCE_DEFLATE);" },
                { "trigger": "%gzip_encode:FORCE_GZIP", "contents": "gzencode(${1:data}${2:, ${3:level}}, FORCE_GZIP);" },
                { "trigger": "%postgres_version", "contents": "pg_version(${1:connection});" },

                { "note": "It ain't over 'til the fat lady sings" }
        ]
}